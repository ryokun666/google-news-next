import Head from "next/head";
import Link from "next/link";
import { useState } from "react";
import styles from "@/styles/News.module.css";

const categories = [
  { id: "top", name: "トップニュース" },
  { id: "business", name: "ビジネス" },
  { id: "entertainment", name: "エンタメ" },
  { id: "health", name: "健康" },
  { id: "science", name: "科学" },
  { id: "sports", name: "スポーツ" },
  { id: "technology", name: "テクノロジー" },
];

const countries = [
  { id: "jp", name: "日本" },
  { id: "us", name: "アメリカ" },
  { id: "ca", name: "カナダ" },
  { id: "gb", name: "イギリス" },
  { id: "au", name: "オーストラリア" },
];

export default function Home({ articles }) {
  const [category, setCategory] = useState("top");
  const [country, setCountry] = useState("jp");
  let query;

  const handleCategoryChange = (event) => {
    setCategory(event.target.value);
  };

  const handleCountryChange = (event) => {
    setCountry(event.target.value);
  };

  const handleRefreshClick = () => {
    setRefresh(!refresh);
  };
  return (
    <div className={styles.container}>
      <Head>
        <title>Googleニュース</title>
        <button onClick={handleRefreshClick}>リロード</button>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <h1 className={styles.title}>
          {countries.find((c) => c.id === country).name}の
          {categories.find((c) => c.id === category).name}
        </h1>

        <div className={styles.controls}>
          <label htmlFor="category">カテゴリ：</label>
          <select
            id="category"
            value={category}
            onChange={handleCategoryChange}
          >
            {categories.map((c) => (
              <option key={c.id} value={c.id}>
                {c.name}
              </option>
            ))}
          </select>

          <label htmlFor="country">国：</label>
          <select id="country" value={country} onChange={handleCountryChange}>
            {countries.map((c) => (
              <option key={c.id} value={c.id}>
                {c.name}
              </option>
            ))}
          </select>
        </div>

        <div className={styles.grid}>
          {articles.map((article) => (
            <Link key={article.url} href={article.url} className={styles.card}>
              <h2>{article.title}</h2>
              <p>{article.description}</p>
            </Link>
          ))}
        </div>
      </main>

      <footer className={styles.footer}>
        Powered by{" "}
        <a
          href="https://newsapi.org/"
          target="_blank"
          rel="noopener noreferrer"
        >
          NewsAPI.org
        </a>
      </footer>
    </div>
  );
}
export async function getServerSideProps({ query }) {
  const country = query.country || "jp";
  const category = query.category || "general";

  const response = await fetch(
    `https://newsapi.org/v2/top-headlines?country=${country}&category=${category}&apiKey=${process.env.NEXT_PUBLIC_NEWS_API_KEY}`
  );
  const data = await response.json();

  return {
    props: {
      articles: data.articles,
      country,
      category,
    },
  };
}
